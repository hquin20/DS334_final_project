---
title: "Shiny App"
author: "Hailey Quintavalle"
format: html
---


```{r message = F, warning = F}
library(tidyverse)
initial_data <- read_csv("data/mxmh_survey_results.csv")
```

```{r}
wrangled_data <- initial_data |> rename(primary_streaming_service = `Primary streaming service`,
               hours_per_day = `Hours per day`,
               while_working = `While working`,
               fav_genre = `Fav genre`,
               foreign_languages = `Foreign languages`,
               music_effects = `Music effects`,
               Classical = `Frequency [Classical]`,
               Country = `Frequency [Country]`,
               EDM = `Frequency [EDM]`,
               Folk = `Frequency [Folk]`,
               Gospel = `Frequency [Gospel]`,
               `Hip Hop` = `Frequency [Hip hop]`,
               Jazz = `Frequency [Jazz]`,
               `K-Pop` = `Frequency [K pop]`,
               Latin = `Frequency [Latin]`,
               Lofi = `Frequency [Lofi]`,
               Metal = `Frequency [Metal]`,
               Pop = `Frequency [Pop]`,
               `R&B` = `Frequency [R&B]`,
               Rap = `Frequency [Rap]`,
               Rock = `Frequency [Rock]`,
               `Video Game` = `Frequency [Video game music]`) |>
  select(-Permissions) |> 
  mutate(music_improve = recode(music_effects, 
                                'Improve'= '1', 
                                'No effect'='0', 
                                'Worsen' = '-1')) |>
  mutate(music_improve = as.numeric(music_improve))
```

```{r}
numeric_music <- wrangled_data |> 
  mutate(Classical = recode(Classical, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Country = recode(Country, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(EDM = recode(EDM, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Folk = recode(Folk, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Gospel = recode(Gospel, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(`Hip Hop` = recode(`Hip Hop`, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Jazz = recode(Jazz, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(`K-Pop` = recode(`K-Pop`, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Latin = recode(Latin, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Lofi = recode(Lofi, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Metal = recode(Metal, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Pop = recode(Pop, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(`R&B` = recode(`R&B`, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Rap = recode(Rap, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(Rock = recode(Rock, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |>
  mutate(`Video Game` = recode(`Video Game`, 
                            'Never'='1', 
                            'Rarely'='2', 
                            'Sometimes' = '3', 
                            'Very frequently' = '4')) |> 
  mutate(Classical = as.numeric(Classical),
         Country = as.numeric(Country),
         EDM = as.numeric(EDM),
         Folk = as.numeric(Folk),
         Gospel = as.numeric(Gospel),
         `Hip Hop` = as.numeric(`Hip Hop`),
         Jazz = as.numeric(Jazz),
         `K-Pop` = as.numeric(`K-Pop`),
         Latin = as.numeric(Latin),
         Lofi = as.numeric(Lofi),
         Metal = as.numeric(Metal),
         Pop = as.numeric(Pop),
         `R&B` = as.numeric(`R&B`),
         Rap = as.numeric(Rap),
         Rock = as.numeric(Rock),
         `Video Game` = as.numeric(`Video Game`))
  
```


```{r}
library(plotly)
library(shiny)
library(tidyverse)

ui <- fluidPage(
  sidebarLayout(
    sidebarPanel(
      selectInput("sel_disorder",
                  "Select Symptoms",
                  choices = c("Anxiety", "Depression", "Insomnia", "OCD")),
      sliderInput("sel_symptoms", 
                  "Minimum Number of Reported Symptoms",
                  1, 10, 5),
      selectInput("sel_genre", 
                  "Select Genre",
                  c("Classical", "Country", "EDM", "Folk", "Gospel", "Hip Hop", "Jazz", 'K-Pop', "Latin", "Lofi", "Metal", "Pop", 'R&B', "Rap", "Rock", 'Video Game')),
      radioButtons("sel_improve",                                   ## figure out how to do All genres
                   "How has music effected your mental health?",
                   c("Improve", "Worsen", "No effect")),
      selectInput("sel_often",
                  "Select Frequency",
                  choices = c("Never", "Rarely", "Sometimes", "Very frequently"))
    ),
    mainPanel(
      tabsetPanel(
        tabPanel("Plot", value = "tab_plot", 
                 plotlyOutput("genres_plot"),
                 plotOutput("effects_plot")),
        tabPanel("Table", value = "tab_table", 
                 dataTableOutput("sum_table"))
      )
    )
    
  )
)


server <- function(input, output, session) {
  
  data_react <- reactive({
    wrangled_data |> pivot_longer(c(Classical, Country, EDM, Folk, Gospel, `Hip Hop`, Jazz, 
                                    'K-Pop', Latin, Lofi, Metal, Pop, `R&B`, Rap, Rock, `Video Game`),
                                  names_to = "genres", 
                                  values_to = "genre_listen") |>
      pivot_longer(c(Anxiety, Depression, Insomnia, OCD), 
                   names_to = "disorder", 
                   values_to = "n_symptoms") |>
      mutate(n_symptoms = as.numeric(n_symptoms)) |>
      filter(music_effects == input$sel_improve,
             disorder == input$sel_disorder,  
             genres == input$sel_genre,
             n_symptoms >= input$sel_symptoms) |>
      group_by(genre_listen) |>
      summarise(n = n()) 
  })
  
  output$genres_plot <- renderPlotly({
    
    plot <- ggplot(data = data_react(), aes(x = genre_listen, y = n)) +
      geom_col(aes(fill = genre_listen), linewidth = 0.8) +
      scale_fill_viridis_d() +
      theme_minimal(base_size = 16) +
      theme(legend.position = "none",
        axis.title.x = element_text(vjust = -2),
        plot.title = element_text(size = 14)
     ) +
      labs(x = glue::glue("How often do you listen to ", input$sel_genre, " Music?"),
           y = "Number of Responses\n", 
           title = glue::glue("Figure 1. Reported ",
                              input$sel_disorder, " symptoms and ",input$sel_genre, " Music"))
   
     ggplotly(plot, tooltip = "y")
  })
  
  output$effects_plot <- renderPlot({
    
    wrangled_data |> pivot_longer(c(Classical, Country, EDM, Folk, Gospel, `Hip Hop`, Jazz, 
                                'K-Pop', Latin, Lofi, Metal, Pop, 'R&B', Rap, Rock, 'Video Game'),
                              names_to = "genres", 
                              values_to = "genre_listen") |>
  pivot_longer(c(Anxiety, Depression, Insomnia, OCD), 
               names_to = "disorder", 
               values_to = "n_symptoms") |>
      filter(disorder == input$sel_disorder,  
             genres == input$sel_genre,
             n_symptoms >= input$sel_symptoms,
             genre_listen == input$sel_often)  |>
      group_by(music_effects) |>
      summarise(n = n()) |>
      drop_na() |>
      mutate(sum = sum(n),
             prop = round(n / sum, 2)) |>
      
      ggplot(aes(x = music_effects, y = prop, group = 1)) +
      geom_point(size = 3) +
      geom_line(linewidth = 1) +
      theme_minimal(base_size = 16) +
      theme(legend.position = "none",
            axis.title.x = element_text(vjust = -1)) +
      labs(x = "Music Effect",
           y = "Proportion of Responses",
           title = glue::glue("\n\nFigure 2. Comparing Effects of ", input$sel_often, " Listening to ",
                              input$sel_genre, " Music"))
  })
  
  output$sum_table <- renderDataTable({
    
    wrangled_data |> select(-c(Timestamp, Classical, Country, EDM, Folk, Gospel, `Hip Hop`,
                               Jazz, `K-Pop`, Latin, Lofi, Metal, Pop, `R&B`, Rap, Rock, `Video Game`,
                               music_improve))
  })
  
}

shinyApp(ui, server)
```


